type atom_id  = int
type angle    = float
type distance = float
type dihedral = float

let pi = acos (-1.)
let to_radian = pi /. 180.

let rec in_range (xmin, xmax) x =
   if (x <= xmin) then
     in_range (xmin, xmax) (x -. xmin +. xmax )
   else if (x > xmax) then
     in_range (xmin, xmax) (x -. xmax +. xmin )
   else
     x

let atom_id_of_int : int -> atom_id = 
  fun x -> ( assert (x>0) ; x)

let distance_of_float : float -> distance = 
  fun x -> ( assert (x>=0.) ; x)

let angle_of_float : float -> angle = 
  fun x -> in_range (-180., 180.) x

let dihedral_of_float : float -> dihedral = 
  fun x -> in_range (-360., 360.) x


let int_of_atom_id : atom_id -> int = fun x -> x

let float_of_distance : distance -> float = fun x -> x

let float_of_angle : angle -> float = fun x -> x

let float_of_dihedral : dihedral -> float = fun x -> x


type line = 
| First  of  Element.t
| Second of (Element.t * distance)
| Third  of (Element.t * atom_id * distance * atom_id * angle)
| Other  of (Element.t * atom_id * distance * atom_id * angle * atom_id * dihedral )

let string_of_line = function
| First  e ->  Printf.sprintf "%-3s" (Element.to_string e)
| Second (e, r) -> Printf.sprintf "%-3s %5d %f" (Element.to_string e) 1 r
| Third  (e, i, r, j, a) -> Printf.sprintf "%-3s %5d %f %5d %f" (Element.to_string e) i r j a
| Other  (e, i, r, j, a, k, d) -> Printf.sprintf "%-3s %5d %f %5d %f %5d %f" (Element.to_string e) i r j a k d

let line_of_string l =
  let line_clean =
    Str.split (Str.regexp " ") l
    |> List.filter (fun x -> x <> "")
  in
  match line_clean with
  | e :: [] -> First (Element.of_string e)
  | e :: i :: r :: [] -> Second
    (Element.of_string e,
     distance_of_float @@ float_of_string r)
  | e :: i :: r :: j :: a :: [] -> Third 
    (Element.of_string e,
     atom_id_of_int @@ int_of_string i,
     distance_of_float @@ float_of_string r,
     atom_id_of_int @@ int_of_string j,
     angle_of_float @@ float_of_string a)
  | e :: i :: r :: j :: a :: k :: d :: [] -> Other
    (Element.of_string e,
     atom_id_of_int @@ int_of_string i,
     distance_of_float @@ float_of_string r,
     atom_id_of_int @@ int_of_string j,
     angle_of_float @@ float_of_string a,
     atom_id_of_int @@ int_of_string k,
     dihedral_of_float @@ float_of_string d)
  | _ -> failwith ("Syntax error: "^l)


type t = line array

let of_string t =
  let l =
    Str.split (Str.regexp "\n") t
    |> List.map String.trim
    |> List.filter (fun x -> x <> "")
    |> List.map line_of_string
  in

  let l = 
    match l with
    | First _ :: Second _ :: Third _ :: _
    | First _ :: Second _ :: []
    | First _ :: [] -> l
    | _ -> failwith "Syntax error"
  in

  Array.of_list l
 

(** Linear algebra *)

let (|-) (x,y,z) (x',y',z') =
  ( x-.x', y-.y', z-.z' )

let (|+) (x,y,z) (x',y',z') =
  ( x+.x', y+.y', z+.z' )

let (|*) s (x,y,z) =
  ( s*.x, s*.y, s*.z )

let dot (x,y,z) (x',y',z') =
  x*.x' +. y*.y' +. z*.z'

let norm u =
  sqrt @@ dot u u

let normalized u =
  1. /. (norm u) |* u

let cross (x,y,z) (x',y',z') =
  ((y *. z' -. z *. y'), -. (x *. z' -. z *. x'), (x *. y' -. y *. x'))

let rotation_matrix axis angle = 
   (* Euler-Rodrigues formula for rotation matrix, taken from
      https://github.com/jevandezande/zmatrix/blob/master/converter.py
   *)
   let a = 
      (cos (angle *. to_radian *. 0.5))
   in
   let (b, c, d) = 
      (-. sin (angle *. to_radian *. 0.5)) |* (normalized axis)
   in
   Array.of_list @@ 
     [(a *. a +. b *. b -. c *. c -. d *. d,
       2. *. (b *. c -. a *. d),
       2. *. (b *. d +. a *. c));
      (2. *. (b *. c +. a *. d),
       a *. a +. c *. c -.b *. b -. d *. d,
       2. *. (c *. d -. a *. b));
      (2. *. (b *. d -. a *. c),
       2. *. (c *. d +. a *. b),
       a *. a +. d *. d -. b *. b -. c *. c)]
(*
     [(a *. a +. b *. b -. c *. c -. d *. d,
       2. *. (b *. c +. a *. d),
       2. *. (b *. d -. a *. c));
      (2. *. (b *. c -. a *. d),
       a *. a +. c *. c -.b *. b -. d *. d,
       2. *. (c *. d +. a *. b));
      (2. *. (b *. d +. a *. c),
       2. *. (c *. d -. a *. b),
       a *. a +. d *. d -. b *. b -. c *. c)]
*)
      


let apply_rotation_matrix rot u =
  (dot rot.(0) u, dot rot.(1) u, dot rot.(2) u)
  
let center_of_mass l =
  let sum_mass =
    Array.fold_left (fun x (y,_,_,_) -> x +. (Element.mass y)) 0. l
  in
  let rec work com = function
  | [] -> 1. /. sum_mass |* com
  | (e,x,y,z) :: rest  -> work (com |+ ((Element.mass e) |* (x,y,z))) rest
  in work (0.,0.,0.) (Array.to_list l)

let to_xyz z =
  let result =
    Array.make (Array.length z) None
  in 

  let get_cartesian_coord i =
    match result.(i-1) with
    | None -> failwith @@ Printf.sprintf "Atom %d is defined in the future" i
    | Some (_, x, y, z) -> (x, y, z)
  in


  let append_line i' =
    match z.(i') with
    | First e -> 
        result.(i') <- Some (e, 0., 0., 0.)
    | Second (e, r) -> 
        let x =
          float_of_distance r
        in
        result.(i') <- Some (e, x, 0., 0.)
    | Third  (e, i, r, j, a) -> 
      begin
        let ui, uj =
          get_cartesian_coord i, 
          get_cartesian_coord j
        in
        let u_ij = 
          (uj |- ui)
        in
        let rot = 
          rotation_matrix (0., 0., 1.) a
        in
        let new_vec =
          apply_rotation_matrix rot ( r |* (normalized u_ij))
        in
        let (x, y, z) =
          new_vec |+ ui
        in
        result.(i') <- Some (e, x, y, z)
      end
    | Other  (e, i, r, j, a, k, d) -> 
      begin
        let ui, uj, uk =
          get_cartesian_coord i, 
          get_cartesian_coord j,
          get_cartesian_coord k
        in
        let u_ij, u_kj =
          (uj |- ui) , (uj |- uk)
        in
        let normal =
          cross u_ij u_kj
        in
        let new_vec = 
          r |* (normalized u_ij)
          |> apply_rotation_matrix (rotation_matrix normal a)
          |> apply_rotation_matrix (rotation_matrix u_ij d)
        in
        let (x, y, z) =
          new_vec |+ ui
        in
        result.(i') <- Some (e, x, y, z)

      end
  in
  Array.iteri (fun i _ -> append_line i) z;
  let result = 
    Array.map (function
    | Some x -> x
    | None -> failwith "Some atoms were not defined" ) result
  in
  let com =
    center_of_mass result
  in
  Array.map (fun (e,x,y,z) -> 
      let x',y',z' = (x,y,z) |- com in
      (e,x',y',z') ) result


let test () =
  let text = "
 N      
 C      1  1.334076
     
 C      2  1.374430    1  108.349266
 N      3  1.423912    2  107.178078      1  -0.459647 
 C      4  1.321928    3  105.084160      2  -0.531386 
 C      3  1.515984    2  127.204895     1  158.026932 
 C      6  1.547982    3  109.034424     2  -86.823929 
 N      7  1.481933    6  108.320435     3  -82.769890 
 C      8  1.364652    7  126.213058     6  112.026382 
 O      9  1.262796    8  120.534698      7  17.021038 
Cu      4  2.290781    3  137.737946      6  46.177574 
 N     11  2.100844    4  100.504509     3  -82.807190 
 C     12  1.489272   11  131.867065     4  -38.346161 
 C     13  1.553518   12  110.088432    11  -82.737312 
 C     14  1.514396   13  117.724373     12  60.216087 
 C     15  1.394081   14  133.124527     13  44.370495 
 N     16  1.377172   15  104.866791   14  -171.957809 
 C     17  1.351596   16  107.945366     15  -1.380990 
 N     18  1.322981   17  111.082527     16  -3.084188 
 C      7  1.500844    6  117.257477     3  160.102890 
 O     20  1.259120    7  113.986488      6  47.633301 
 O     20  1.260763    7  119.933403    6  -130.278732 
 C     12  1.375913   13  116.361130     14  93.018272 
 O     23  1.262589   12  127.902641      13  1.229573 
 C     23  1.549491   12  116.852730   13  -179.883560 
 N     25  1.429052   23  111.425995      12  4.308061 
 C     26  1.329675   25  119.626114   23  -147.185257 
 O     27  1.238581   26  122.193855     25  -0.631505 
 C     27  1.541907   26  114.307274   25  -173.447769 
 N     29  1.444256   27  106.947968    26  -35.460850 
 C     29  1.539348   27  111.030006    28  -85.026138 
 C     31  1.548380   29  112.962059    27  168.152588 
 C     32  1.564650   31  112.721329   29  -115.808296 
 O     33  1.263021   32  125.778915     31  14.096997 
 O     33  1.329088   32  112.531868   31  -164.500168 
 C     25  1.546681   23  116.436913    24  -52.942875 
 C     36  1.535417   25  113.004082     23  76.604256 
 C     36  1.497239   25  113.538948    23  -59.968819 
 O     21  2.628301   20  137.624771    7  -168.338409 
 O     39  2.513246   21   90.241211    20  113.752396 
Na     40  2.309289   39   89.902367     21  68.422562 
 O     41  2.279629   40   98.749336   39  -148.236526 
 O     41  2.306007   40  119.125198    39  106.021355 
 O     41  2.354161   40  115.306900    39  -18.756464 
 O     35  2.685032   33  113.946648   32  -162.119385 
 O     40  2.694418   39  107.355751    21  -84.081131 
 O     40  2.720214   39  121.171501    21  153.543396 
 O     39  2.724413   21  131.167892   20  -127.849266 
 O     48  2.682201   39  107.927650    21  -95.071297 
 O     44  2.736848   41  125.992477    40  103.796204 
 O     50  2.677878   44  140.739731    41  -38.172478 
 O     51  2.732156   50   98.138321     44  63.195000 
 O     51  2.740280   50  103.954224    44  156.895309 
 O     48  2.774046   39  101.732704     21  57.805573 
 O     54  2.727608   48   98.912834    39  -38.347313 
 O     55  2.679357   54  129.284393    48  -96.229431 
 O     19  2.783433   15  118.162163     14  -7.036649 
 O     10  2.784374    9  158.418961     13  32.297829 
 O     58  2.737062   10  129.815353     9  -73.323112 
 O     59  2.665712   58   80.329758    10  -99.375061 
 O     46  2.801870   40   70.573273    39  140.625565 
 O     54  2.810184   48  151.058594   39  -174.572952 
 O     62  2.597680   54   80.885376     48  91.299774 
 O     28  2.818121   27  144.141022     29  76.796310 
 O     64  2.830721   28   84.323997   27  -106.798836 
 O     65  2.665709   64   74.795654    28  -50.266769 
 O     66  2.726327   65   93.695808   64  -157.012024 
 O     47  2.845567   40  110.915771    39  122.814697 
 O     61  2.867292   46   98.915146   40  -156.496445 
 O     35  2.869504   33  132.553391     32  35.551411 
 O     70  2.577994   35   85.164146     33  29.209015 
 O     70  2.809070   35  118.828896    33  -94.590500 
 O     72  2.662718   70   93.654022    35  -66.715149 
 O     72  2.713488   70   97.079842     35  50.122253 
 O     74  2.631421   72  154.697311    70  -71.433212 
 O     75  2.542724   74  128.231689     72  19.914751 
 O     74  2.700378   72  106.266403    70  176.701843 
 O     77  2.698354   74   99.105804    72  173.070969 
 O     76  2.753010   75  115.619911   74  -123.395317 
 O     77  2.759034   74  110.421295     72  60.895336 
 O     80  2.755697   77   95.742676     74  35.875092 
 O     81  2.626454   80  112.606064    77  -53.103149 
 O     82  2.516070   81  124.555023    80  158.334885 
 O     81  2.723118   80   99.974800     77  75.043915 
 O     74  2.847962   72  115.576607     70  66.065781 
 O     85  2.580233   74  103.391792     72  44.246052 
 O     86  2.704531   85  116.313828    74  103.154892 
 O     87  2.531965   86  104.125252     85  -6.769042 
 O     88  2.416849   87  106.211121     86  13.993074 
 O     62  2.875204   54  112.906067    48  -19.207615 
 O     22  2.878568   20  139.952362    7  -134.664673 
 O     91  2.554425   22  122.344460   20  -160.099533 
 O     91  2.623284   22   91.187035    20  -47.247704 
 O     92  2.719516   91  104.915741    22  -65.396797 
 O     64  2.881333   28  114.349594     27  29.357506 
 O     95  2.827953   64  103.045555   28  -141.174561 
 O     63  2.889963   62  156.699234   54  -111.512146 
 O     97  2.660716   63  120.117149   62  -169.101990 
Na     98  2.550843   97  117.346313    63  148.966812 
 O     99  2.118665   98  112.282700     97  41.982975 
 O     99  2.256981   98  109.305725   97  -171.645508 
 O    100  2.708672   99  110.429268    98  106.723610 
 O     42  2.891583   41  106.723557    40  -69.706367 
 O     91  2.899535   22   63.848766     20  88.956375 
 O     94  2.900716   92   80.956245     91  75.010635 
 O    105  2.512929   94  122.066315   92  -100.352188 
 O    105  2.599127   94  107.477882     92  18.855265 
 O    106  2.653661  105   93.536705    94  -84.715057 
 O    108  2.541362  106   98.170670  105  -145.153885 
 O     72  2.905282   70  131.268677    35  134.582748 
 O     84  2.926236   81  129.569031    80  -11.922683 
 O    111  2.758286   84  105.423553    81  126.810471 
 O    112  2.915503  111   69.805725     84  97.754150 
 O     46  2.928524   40  152.585846    39  145.314499 
 O    114  2.679238   46   96.717827   40  -118.705856 
 O    115  2.787473  114  136.892731   46  -134.558533 
 O     43  2.940145   41   83.942139   40  -164.394394 
 O    117  2.600186   43  104.459084   41  -139.531967 
 O     67  2.969086   66   79.697838     65  53.014072 
 O     96  2.977806   95   91.520668     64  63.066437 
 O    120  2.597620   96  103.957695   95  -162.232285 
 O    120  2.676616   96   92.246117     95  90.926720 
 O    122  2.647298  120  113.237823   96  -116.484016 
 O    123  2.899978  122   80.528877    120  61.088699 
 O    124  2.621996  123  104.919525    122  63.229748 
 O    125  2.779435  124  105.495071   123  125.786331 
 O    124  2.850895  123  103.600365   122  154.370941 
 O    127  2.752834  124  151.114838   123  172.922775 
 O    127  2.814917  124  106.076736   123  -18.878139 
 O    129  2.661627  127   80.305290   124  169.834946 
 O    130  2.591425  129   91.114723  127  -148.011261 
 O    131  2.601971  130  102.020706    129  96.431946 
 O    132  2.874858  131  106.944962   130  115.513733 
 O    133  2.555090  132  146.212967   131  130.518707 
 O    126  2.983769  125  143.993896   124  -74.073349 
 O     60  3.005116   59   78.343498     58  67.393066 
 O     43  3.009430   41  152.730087     40  60.556793 
 O     63  3.063393   62   85.486252   54  -138.793076 
 O     58  3.133075   10  111.328896      9  97.368637 
 O    132  3.187441  131   96.356834   130  -52.875568 
 O    136  3.233717   60   70.544617    59  179.655624 
 O     47  3.469176   40  141.288910      39  1.374147 
 H     30  1.037078   29  111.378273    31  131.716141 
 H     30  1.034547   29  111.645546     31  12.590766 
 H     29  1.101485   31  111.501732     32  47.423691 
 H     31  1.110672   29  105.651459     27  54.757332 
 H     31  1.110082   29  109.590370    27  -58.976322 
 H     32  1.100379   31  107.469368     29  -8.950557 
 H     32  1.094715   31  116.449234    29  115.399307 
 H     25  1.103185   36  106.216965   38  -176.898331 
 H     36  1.105604   25  100.257858   23  -175.052490 
 H     38  1.092297   36  106.291245   25  -154.874939 
 H     38  1.103090   36  111.036163    25  -43.143528 
 H     38  1.099699   36  117.652199     25  82.747787 
 H     37  1.101276   36  113.606163    25  -48.149342 
 H     37  1.108596   36  106.494415     25  68.250877 
 H     37  1.113956   36  112.964378   25  -174.339508 
 H     13  1.099652   14  103.797966    15  173.007629 
 H     17  1.042074   16  123.331314   15  -175.277588 
 H     16  1.076476   15  133.124100     14  14.821501 
 H     18  1.082547   17  122.299805   16  -169.673645 
 H     14  1.100635   13  111.204346      9  56.304485 
 H     14  1.097786   13  106.374847     9  174.220016 
 H      8  1.027666    9  119.740517      13  2.009320 
 H      7  1.104312    6  104.643661      3  32.815796 
 H      1  1.016060    2  124.185997     3  177.367188 
 H      6  1.104660    7  105.878563    20  -81.285927 
 H      6  1.106454    7  106.220329     20  27.520029 
 H      2  1.079262    3  129.766373     6  -22.980604 
 H      5  1.080987    4  127.859642     3  160.958908 
 H    132  1.904947  131   82.863373  130  -141.308167 
 H     92  1.026114   91  119.103943    22  -81.253059 
 H     49  1.001763   48   16.911245     39  72.194061 
 H     49  0.977979   48   80.557037   39  -104.106300 
 H    105  1.681284   94  102.058945    92  157.832642 
 H     52  0.986015   51   93.451668    50  -68.043701 
 H    122  0.987810  120  104.316063   96  -128.574112 
 H    122  0.975369  120    3.514163     96  46.895313 
 H    104  0.989011   91   55.903526     22  18.483007 
 H    104  0.986065   91   64.824127    22  144.862625 
 H    107  0.988597  105  106.243149     94  18.113503 
 H    107  0.977628  105  142.978638   94  -134.156494 
 H     60  2.234841   59  145.447296    58  -23.703379 
 H     53  0.992621   51   81.203514    50  -30.944010 
 H    106  1.006532  105  101.286469     94  33.881226 
 H    106  1.004895  105   93.944733    94  -77.060242 
 H    114  1.010200   46    4.944255   40  -178.192459 
 H    114  0.966950   46  102.153236    40  127.105598 
 H    137  1.009950   43  115.443924    41  -26.906712 
 H    137  0.984735   43   94.490028   41  -131.280869 
 H     50  1.014374   44  131.503311    41  -39.988689 
 H     50  0.973680   44  117.503479    41  100.185921 
 H     63  2.349625   62  108.712608    54  110.998840 
 H    103  0.967564   42   61.055656     41  14.876905 
 H    120  0.977121   96  146.842331    95  -11.325841 
 H    120  0.970748   96  100.795471   95  -151.361298 
 H     43  1.024322   41   94.862869    40  -53.988243 
 H     43  0.972220   41  133.125870     40  63.588390 
 H     62  1.622751   54  115.620987   48  -165.441620 
 H     68  1.009867   47  112.191986    40  -89.590210 
 H     60  0.999303   59   76.784431     58  44.716644 
 H     60  0.982364   59  103.082253    58  154.316956 
 H    115  0.989448  114  102.271713     46  -5.943234 
 H    115  1.006553  114    5.098403     46  87.854866 
 H    138  0.992756   63   64.955177     62  16.530254 
 H    138  0.990203   63  148.376617     62  91.880234 
 H     45  1.039753   35   16.430840    33  -40.103840 
 H     45  1.019767   35  122.861351    33  -20.340216 
 H    111  1.006378   84   93.602188     81  61.996086 
 H    111  0.999030   84   21.675571    81  165.141815 
 H     48  1.007583   39   73.599922    21  172.112366 
 H     48  0.994961   39  112.630005     21  62.546284 
 H     61  1.004097   46   67.317635     40  95.421432 
 H     61  1.002770   46   88.022293   40  -151.590073 
 H    121  0.961946  120  149.980087      96  2.813113 
 H    121  1.010023  120   78.028748    96  -95.658127 
 H     59  0.967768   58    6.647409     10  85.369514 
 H     59  1.022737   58   89.098053    10  -99.676071 
 H    136  1.003555   60   97.131073   59  -116.871498 
 H    136  0.988716   60   96.227821     59  -6.096294 
 H    118  1.015321  117  108.180481    43  152.626450 
 H    118  0.961733  117   21.484901   43  -119.888466 
 H     72  0.993368   70  134.658386    35  156.537170 
 H     72  0.986928   70   94.653206    35  -77.094131 
 H    137  1.943096   43  124.135284     41  98.156982 
 H    112  0.979347  111   82.486824     84  91.351654 
 H     40  1.041713   39  108.280548    21  156.947784 
 H     40  1.063889   39    3.734631    21  150.114883 
 H    142  1.034885   47  129.515625   40  -100.359123 
 H    142  0.986609   47   69.268753      40  2.329787 
 H     51  0.996314   50   91.545074   44  -167.842148 
 H     51  1.019342   50  102.558990     44  88.711761 
 H    125  0.990366  124  107.652939   123  118.205658 
 H    125  0.975958  124  124.934235     123  3.798846 
 H     73  0.967150   72   90.996109    70  108.500755 
 H    131  1.861027  130  120.809174  129  -159.137100 
 H     93  1.060566   91    2.312539    22  138.121964 
 H     93  1.006484   91   97.379143      22  5.802031 
 H     62  0.985891   54   94.399330     48  87.408997 
 H     62  0.999640   54    1.879629     48  61.128620 
 H     55  0.980215   54  115.056412    48  128.848114 
 H     55  0.958795   54  132.278564    48  -89.853096 
 H    141  0.952771  136  138.506516   60  -158.484863 
 H    141  0.977711  136   98.404572     60  78.600090 
 H     39  1.001806   21  118.920174   20  -132.435226 
 H     39  1.024003   21    8.539956    20  -96.462402 
 H    119  0.974208   67  115.220154    66  120.823097 
 H    119  1.014387   67    9.672891     66  47.995388 
 H    125  1.873023  124  129.489090  123  -138.531097 
 H     87  0.991352   86   16.665836   85  -168.137802 
 H     86  1.025206   85    8.509606     74  82.258629 
 H     86  1.008440   85  105.909775   74  -160.691452 
 H    105  0.996556   94  111.477341     92  15.456026 
 H    105  1.014876   94  119.114113   92  -101.806282 
 H    109  1.010075  108  128.360718    106  39.936035 
 H    109  1.019592  108  114.936142   106  177.327118 
 H     70  1.000004   35   10.654613    33  -38.926220 
 H     70  0.973355   35  121.490501    33  -97.256271 
 H    124  0.973787  123   96.370964    122  59.184052 
 H    124  0.973610  123  139.025070   122  -66.139664 
 H    113  0.983506  112   95.575546  111  -109.950462 
 H    113  0.983259  112  121.582710   111  142.475662 
 H     74  1.023319   72  103.268898    70  175.058029 
 H     74  1.002977   72    1.573194    70  111.840195 
 H     77  0.989132   74  107.559715     72  51.059650 
 H     77  0.990570   74  109.125710    72  -65.499901 
 H     76  0.950248   75  108.166489    74  -20.449944 
 H     76  0.977979   75   12.388226    74  -82.308487 
 H     80  0.999196   77   91.593071     74  38.023731 
 H     65  4.093211   64   92.162674    28  175.441589 
 H     85  0.981466   74    0.382192     72  72.082497 
 H     85  0.979137   74  105.285217    72  145.686844 
 H     96  0.979749   95   92.940094     64  74.725410 
 H     96  1.029364   95   13.713776   64  -115.870949 
 H    110  1.010677   72  131.049149   70  -107.477264 
 H    110  0.979090   72   98.365768     70  16.537766 
 H    116  0.979327  115  100.749275    114  77.249710 
 H    116  0.988045  115   16.383812   114  -42.626244 
 H    135  0.972069  126   64.906479   125  -48.865131 
 H    121  1.714323  120   92.249290    96  146.399673 
 H     64  1.008173   28    6.193970    27  -16.686621 
 H     64  0.983970   28  101.394058   27  -111.833801 
 H     83  0.992226   82  125.017151     81  36.402214 
 H     83  0.990105   82  106.375473    81  163.434998 
 H    101  0.973587   99  124.267853    98  -36.556904 
 H     65  2.000832   64  164.450287    28  101.400352 
 H     78  1.000901   77    9.563393   74  -125.760071 
 H     78  1.025564   77  115.856819   74  -120.207855 
 H     44  0.993969   41   98.944649    40  -35.251694 
 H     44  0.981485   41  120.505463     40  97.940796 
 H     95  0.966620   64  111.478729    28  110.895988 
 H     95  0.990206   64    2.415852   28  -132.792953 
 H     47  1.001712   40  146.040039    39  -18.007364 
 H     47  1.038480   40  104.163673    39  121.237701 
 H     81  1.039425   80  113.095009    77  -46.905014 
 H     81  1.002018   80   99.509796     77  70.160484 
 H    128  0.979183  127   94.797775    124  96.989052 
 H    128  1.011979  127   12.588213   124  -50.201321 
 H     65  0.973510   64   92.097801     28  80.622231 
 H     65  0.989518   64   92.772705    28  -30.713675 
 H    117  0.994502   43    7.903325    41  -55.006508 
 H    117  0.972139   43  115.040939      41  3.106160 
 H     69  0.983629   61  116.764122   46  -126.373947 
 H     69  0.979960   61   92.220322    46  -18.818678 
 H     79  0.970358   76  119.295807    75  -87.960983 
 H     79  0.973692   76   19.339237   75  -118.364090 
 H    102  3.224471  100   85.200279     99  81.514633 
 H    134  1.011146  133    4.462017   132  -58.708698 
 H    102  0.991892  100   69.509758     99  -6.749816 
 H    102  1.000968  100  105.478210     99  90.110878 
 H     63  0.983543   62   82.627350      54  4.303670 
 H     63  0.979594   62  158.187546   54  -102.953560 
 H     58  0.970064   10   14.620795     9  113.133156 
 H     58  0.981568   10  120.344643     9  113.678032 
 H    139  1.000431   58   98.273788     10  57.877705 
 H    139  0.978145   58  150.962311   10  -126.143120 
 H     82  0.991230   81  118.857948    80  164.366592 
 H     82  1.012000   81  107.529755     80  43.828136 
 H    100  1.005247   99  126.728828     98  93.479797 
 H     59  1.807240   58  105.558708    10  152.988190 
 H     89  1.037183   88    2.810755    87  -69.373489 
 H     89  0.994328   88  106.198822   87  -123.852966 
 H    131  1.001739  130    9.316996   129  142.056839 
 H    237  2.811745   93  108.788170  238  -158.627487 
 H     75  0.987366   74   13.554236      72  1.878616 
 H     75  0.947716   74   98.969299   72  -121.659195 
 H     46  1.004133   40    9.613312     39  69.071342 
 H     46  0.973786   40   99.955185    39  -47.971668 
 H     88  1.010433   87  111.019958    86  132.097031 
 H     88  1.013925   87    6.791092    86  124.495865 
 H    132  1.025303  131   98.437439   130  -50.798920 
 H    132  0.979116  131    6.903998   130  144.903793 
 H     67  0.988098   66   13.145091   65  -121.445206 
 H     67  0.980854   66  122.555984   65  -143.555832 
 H    127  0.979936  124  104.377151    123  -8.804314 
 H    127  0.961851  124    4.200857  123  -163.125671 
 H    238  2.478388   93   80.171928  237  -111.832603 
 H     71  1.031136   70   11.731006   35  -166.114395 
 H     98  0.966612   97  127.716827    63  -31.055176 
 H     98  0.995667   97   80.275482     63  70.278786 
 H    126  1.028781  125  117.929031   124  122.195053 
 H    126  0.992691  125  136.261871   124  -36.706478 
 H    123  1.012095  122  153.524078   120  -68.332832 
 H    123  1.006420  122   89.826332    120  52.047276 
 H     56  0.977148   55   74.817146     54  51.191528 
 H     56  0.984739   55  129.803528    54  146.904968 
 H     57  1.027044   19    0.122705     15  -7.010883 
 H     57  0.978790   19  101.341125     15  93.104042 
 H     94  1.005314   92  135.128357    91  169.531326 
 H     94  1.008718   92   82.087288     91  73.692238 
 H     54  0.988243   48   96.358467     39  74.754211 
 H     54  0.990693   48  103.090637    39  -30.438499 
 H    140  0.989389  132  122.450531    131  61.389774 
 H    140  0.988945  132  136.224899   131  -95.824280 
 H    130  1.031867  129   94.125153    127  -0.170698 
 H    130  1.023849  129  118.352493   127  102.231812 
 H     84  1.020394   81  118.038277   80  -133.602219 
 H     59  1.906374   58  115.666908     10  33.821014 
 H    133  1.011155  132  109.475838   131  -87.778343 
 H    133  0.973081  132   12.091901  131  -168.864944 
 H     91  1.015405   22    7.201874   20  -136.024948 
 H     91  1.012019   22  116.763542   20  -159.136871 
 H     90  1.001697   62   15.015068    54  160.774033 
 H    126  2.334476  125   89.903954  124  -137.748428 
 H     97  0.995812   63  126.912834     62  -8.339175 
 H     97  0.993389   63  121.813454    62  177.542145 
 H     42  0.977818   41  107.267952      40  3.922184 
 H     42  1.005828   41  142.561493    40  171.669647 
 H    108  0.994794  106   98.462677  105  -132.783310 
 H     52  1.967236   51  102.417099     50  52.770409 
 H     66  0.986788   65   91.867897    64  -40.932587 
 H     66  0.980316   65   81.166397     64  57.918850 


 H     93  1.725202   91  118.087997    22  149.353378 
 H    129  1.004395  127   88.469788   124  168.052933 



"
  in
  let l = of_string text
  in
  to_xyz l 
  |> Array.iter (fun (e,x,y,z) -> 
    Printf.printf "%s %f %f %f\n" (Element.to_string e) x y z) ;


